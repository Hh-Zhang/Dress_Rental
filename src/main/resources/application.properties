server.port=8085
# 数据源配置#
spring.datasource.url=jdbc:mysql://localhost:3306/wd_rental?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false
spring.datasource.hikari.username=root
spring.datasource.hikari.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource

# 修改以后要实时生效，先禁用前端缓存，Ctrl+F9 重新编译
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
##写入HTTP响应的Content-Type值
#spring.thymeleaf.servlet.content-type=text/html

# 修改默认的静态寻址资源目录
spring.resources.static-locations = classpath:/templates/,classpath:/resources/,classpath:/static/,classpath:/public/
#springboot Spring Boot 默认会挨个从 public resources static 里面找是否存在相应的资源，如果有则直接返回。
#spring.mvc.static-path-pattern=/static/**



#mybatis
   #1.如果将xml文件放在静态资源文件夹下，如果你把xml放到了resources文件下，
   # 那么就只需要配置mybatis.mapper-locations=classpath:*/mapper/*.xml 就可以了
   # 因为构建的时候会把resources里的东西自动拉到classpath下，注意.classpath意思就是编译后target文件夹下的classes目录
   #2.你的mapper写在了java目录里面。*例如下图：这样会出现一个问题，
   # 即使你在properties里面配置了 mybatis.mapper-locations= classpath:com/lihaoyu/demo/dao/*.xml，也没有用，因为编译的时候这个xml文件并没有被自动拉到target里面，毕竟编译的是.java文件而不是xml嘛，
   # 所以这时候应该在pom文件里面加上

mybatis.mapper-locations=classpath*:/mapper/*.xml
